<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg height="521.0150" name="snapshot" onload="LoadHandler(evt)" onzoom="zoomHandler(evt)" width="1000.0" xmlns="http://www.w3.org/2000/svg"><AttributeMap name="Node Type" value="node color"/><defs><marker id="arrowHead-16776961" markerHeight="6" markerUnits="strokeWidth" markerWidth="8" orient="auto" refX="10" refY="5" viewBox="0 0 10 10"><path d="M 0 0 L 10 5 L 0 10 z" fill="rgb(0,0,255)"/></marker><marker id="arrowHead-4565549" markerHeight="6" markerUnits="strokeWidth" markerWidth="8" orient="auto" refX="10" refY="5" viewBox="0 0 10 10"><path d="M 0 0 L 10 5 L 0 10 z" fill="rgb(186,85,211)"/></marker><marker id="arrowHead-12156236" markerHeight="6" markerUnits="strokeWidth" markerWidth="8" orient="auto" refX="10" refY="5" viewBox="0 0 10 10"><path d="M 0 0 L 10 5 L 0 10 z" fill="rgb(70,130,180)"/></marker></defs><g id="displayBean" transform="matrix(1.083344093274326,0.0,0.0,1.083344093274326,-41.67204663716291,25.311340668702428)"><image visibility="hidden"><![CDATA[ffd8ffe000104a46494600010200000100010000ffdb004300080606070605080707070909080a0c140d0c0b0b0c1912130f141d1a1f1e1d1a1c1c20242e2720222c231c1c2837292c30313434341f27393d38323c2e333432ffdb0043010909090c0b0c180d0d1832211c213232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232ffc00011080034006403012200021101031101ffc4001f0000010501010101010100000000000000000102030405060708090a0bffc400b5100002010303020403050504040000017d01020300041105122131410613516107227114328191a1082342b1c11552d1f02433627282090a161718191a25262728292a3435363738393a434445464748494a535455565758595a636465666768696a737475767778797a838485868788898a92939495969798999aa2a3a4a5a6a7a8a9aab2b3b4b5b6b7b8b9bac2c3c4c5c6c7c8c9cad2d3d4d5d6d7d8d9dae1e2e3e4e5e6e7e8e9eaf1f2f3f4f5f6f7f8f9faffc4001f0100030101010101010101010000000000000102030405060708090a0bffc400b51100020102040403040705040400010277000102031104052131061241510761711322328108144291a1b1c109233352f0156272d10a162434e125f11718191a262728292a35363738393a434445464748494a535455565758595a636465666768696a737475767778797a82838485868788898a92939495969798999aa2a3a4a5a6a7a8a9aab2b3b4b5b6b7b8b9bac2c3c4c5c6c7c8c9cad2d3d4d5d6d7d8d9dae2e3e4e5e6e7e8e9eaf2f3f4f5f6f7f8f9faffda000c03010002110311003f00f7fa28a28033b5291f72c41d91701be462a7afa8aad6f24b1dca112c8db98290ce586091d8d5cbdb7965955a34dc36e3a8aaf15a4fe6c6c63c286049c8e99ae39fb5f6ba5ec6d1e5e5d4d6a28a2bb0c428a28a0028aa6daa59abb2194e54e0e118ff004ab51c892a0746ca9e4524d3d807514514c028a28a0028a28a00ceb9d49924789202e00c6e0f8e79cd16323cd85334ea507dd6d8411f5db5526ff5f2ff00bedfceace9dff1f0dfee7f515c94f11375393a1b4a9a51b9a745145759885473ff00c7bc9fee1fe552531c798a53b30c13401875a5a67fa893feba7f414bfd9b17fcf493f31fe153c102dba154248272735c74284a12bb369d4525644b45145761885145140051451401135b40cc59a18c93d4941486158959a08a35931c00300fb1a9a8a1249dc0cf3abc49398a58e48caf0d904e3fc7f0a9e3bfb6964089212c7a7ca7fc2a85e7fc7e4bf51fc8516601bb8f23d7f91ae6facfef392c6becfdde6b9a8ebe6a95c900fa1c5316db0399a527b9dd53d15d57321a89b011b99bfde39a75145200a28a2800a28a2800a28a2800a28a2802b4b631cd2990b3827ae08ff0a21b18e1944819c91d3247f8514563cb1e7bd8bbbb1668a28ad880a28a2800a28a2800a28a2803ffd9]]></image><g id="nodes_and_labels"><rect fill="rgb(245,224,171)" height="500.0" id="http://www.owl-ontologies.com/Hospital-ver2.owl#MiscallaneousOrders" onmousemove="mousemoveHandler(evt)" panelMode="Closed" rx="15.0" ry="15.0" stroke="rgb(64,64,64)" stroke-width="2" transform="matrix(0.202,0.0,0.0,0.202,356.56494370988776,343.63954611432376)" visibility="visible" width="500.0"><transform height="0.202" scaleX="356.56494370988776" scaleY="343.63954611432376" width="0.0" x="0.202" y="0.0"/><focus>false</focus><title>MiscallaneousOrders (Primitive Class)</title></rect><text fill="black" font-family="Dialog" font-size="12" onmousemove="mousemoveHandler(evt)" text-anchor="middle" transform="matrix(0.202,0.0,0.0,0.202,356.56494370988776,343.63954611432376)" x="66.5" y="28.064453125">MiscallaneousOrders<title>MiscallaneousOrders (Primitive Class)</title></text><rect fill="rgb(245,224,171)" height="500.0" id="http://www.owl-ontologies.com/Hospital-ver2.owl#Expenditures" onmousemove="mousemoveHandler(evt)" panelMode="Closed" rx="15.0" ry="15.0" stroke="rgb(64,64,64)" stroke-width="2" transform="matrix(0.202,0.0,0.0,0.202,198.96784726559417,178.83272955108364)" visibility="visible" width="500.0"><transform height="0.202" scaleX="198.96784726559417" scaleY="178.83272955108364" width="0.0" x="0.202" y="0.0"/><focus>false</focus><title>Expenditures (Primitive Class)</title></rect><text fill="black" font-family="Dialog" font-size="12" onmousemove="mousemoveHandler(evt)" text-anchor="middle" transform="matrix(0.202,0.0,0.0,0.202,198.96784726559417,178.83272955108364)" x="43.5" y="28.064453125">Expenditures<title>Expenditures (Primitive Class)</title></text><rect fill="rgb(245,224,171)" height="500.0" id="http://www.owl-ontologies.com/Hospital-ver2.owl#Department" onmousemove="mousemoveHandler(evt)" panelMode="Closed" rx="15.0" ry="15.0" stroke="rgb(64,64,64)" stroke-width="2" transform="matrix(0.202,0.0,0.0,0.202,626.6530260554279,121.55151363860305)" visibility="visible" width="500.0"><transform height="0.202" scaleX="626.6530260554279" scaleY="121.55151363860305" width="0.0" x="0.202" y="0.0"/><focus>false</focus><title>Department (Primitive Class)</title></rect><text fill="black" font-family="Dialog" font-size="12" onmousemove="mousemoveHandler(evt)" text-anchor="middle" transform="matrix(0.202,0.0,0.0,0.202,626.6530260554279,121.55151363860305)" x="40.0" y="28.064453125">Department<title>Department (Primitive Class)</title></text><rect fill="rgb(245,224,171)" height="500.0" id="http://www.owl-ontologies.com/Hospital-ver2.owl#Accounting" onmousemove="mousemoveHandler(evt)" panelMode="Closed" rx="15.0" ry="15.0" stroke="rgb(64,64,64)" stroke-width="2" transform="matrix(0.202,0.0,0.0,0.202,220.65517966825487,0.6276831377058798)" visibility="visible" width="500.0"><transform height="0.202" scaleX="220.65517966825487" scaleY="0.6276831377058798" width="0.0" x="0.202" y="0.0"/><focus>false</focus><title>Accounting (Primitive Class)</title></rect><text fill="black" font-family="Dialog" font-size="12" onmousemove="mousemoveHandler(evt)" text-anchor="middle" transform="matrix(0.202,0.0,0.0,0.202,220.65517966825487,0.6276831377058798)" x="37.5" y="28.064453125">Accounting<title>Accounting (Primitive Class)</title></text></g><g id="arcs"><line marker-end="url(#arrowHead-16776961)" onmousemove="mousemoveHandler(evt)" stroke="rgb(0,0,255)" stroke-width="1" visibility="visible" x1="297.7586494083739" x2="358.774141567108" y1="279.8327295510836" y2="343.63954611432376"><title>has subclass: "Expenditures"  to  "MiscallaneousOrders"</title></line><line marker-end="url(#arrowHead-16776961)" onmousemove="mousemoveHandler(evt)" stroke="rgb(0,0,255)" stroke-width="1" visibility="visible" x1="265.0093925069091" x2="255.61363442693997" y1="101.62768313770587" y2="178.83272955108362"><title>has subclass: "Accounting"  to  "Expenditures"</title></line><line marker-end="url(#arrowHead-4565549)" onmousemove="mousemoveHandler(evt)" stroke="rgb(186,85,211)" stroke-width="1" visibility="visible" x1="457.56494370988776" x2="626.6530260554279" y1="352.6144053431168" y2="213.5766544098101"><title>hasAffiliatedDepartment (Necessary): "MiscallaneousOrders"  to  "Department"</title></line><line marker-end="url(#arrowHead-12156236)" onmousemove="mousemoveHandler(evt)" stroke="rgb(70,130,180)" stroke-width="1" visibility="visible" x1="457.56494370988776" x2="626.6530260554279" y1="352.6144053431168" y2="213.5766544098101"><title>hasAffiliatedDepartment (Domain&gt;Range): "MiscallaneousOrders"  to  "Department"</title></line></g></g><g name="non_display" visibility="hidden" xmlns=""><g name="info" visibility="hidden"><text name="userName">praxitelis</text><text name="prjName">Hospital-ver2</text><text name="timeStamp">Σαβ, 13 Φεβ 2016 09:20:36 +0200</text><text name="userComment">[no comment entered]</text><text id="currentScale">1.0833440932743272</text></g><text name="cprels"/><text name="focusedNodeID">-1</text><text height="480.9183003207381" name="screenCoord" width="923.0677549342382" x="38.46612253288084" y="-23.36408240543483"/><g id="displayFilters" name="displayFilters"><text id="filter_0" name="filter_0">nominal attribute|artifact filter|Node Type|java.lang.String|Restriction|Enumeration|Logical Operation|Individual|RDFS Class</text><text id="filter_1" name="filter_1">nominal attribute|relationship filter|Arc Type|java.lang.String</text></g><g id="dataFilters" name="dataFilters"><text id="filter_0" name="filter_0">nominal attribute|artifact type string filter|Node Type|java.lang.String|Restriction|Enumeration|Logical Operation|Individual|RDFS Class</text><text id="filter_1" name="filter_1">nominal attribute|relationship type string filter|Arc Type|java.lang.String|Hospital-ver2:departmentUseWard|Hospital-ver2:departmentUseWard (Necessary and Sufficient)|Hospital-ver2:departmentUseWard (Necessary)|Hospital-ver2:hasCollege|Hospital-ver2:hasCollege (Necessary and Sufficient)|Hospital-ver2:hasCollege (Necessary)|Hospital-ver2:headOfDept|Hospital-ver2:headOfDept (Necessary and Sufficient)|Hospital-ver2:headOfDept (Necessary)|Hospital-ver2:isEspeciallyInvolvedIn|Hospital-ver2:isEspeciallyInvolvedIn (Necessary and Sufficient)|Hospital-ver2:isEspeciallyInvolvedIn (Necessary)|Hospital-ver2:isEspeciallyTreats|Hospital-ver2:isEspeciallyTreats (Necessary and Sufficient)|Hospital-ver2:isEspeciallyTreats (Necessary)|Hospital-ver2:IsInvolvedIn|Hospital-ver2:IsInvolvedIn (Necessary and Sufficient)|Hospital-ver2:IsInvolvedIn (Necessary)|Hospital-ver2:roomHasBeds|Hospital-ver2:roomHasBeds (Necessary and Sufficient)|Hospital-ver2:roomHasBeds (Necessary)|Hospital-ver2:wardHasRooms|Hospital-ver2:wardHasRooms (Necessary and Sufficient)|Hospital-ver2:wardHasRooms (Necessary)|Hospital-ver2:wingHasDepartment|Hospital-ver2:wingHasDepartment (Necessary and Sufficient)|Hospital-ver2:wingHasDepartment (Necessary)|Hospital-ver2:wingHasWard|Hospital-ver2:wingHasWard (Necessary and Sufficient)|Hospital-ver2:wingHasWard (Necessary)|Hospital-ver2:worksIn|Hospital-ver2:worksIn (Necessary and Sufficient)|Hospital-ver2:worksIn (Necessary)|Hospital-ver2:departmentUseWard (Domain&gt;Range)|Hospital-ver2:hasCollege (Domain&gt;Range)|Hospital-ver2:headOfDept (Domain&gt;Range)|Hospital-ver2:isEspeciallyInvolvedIn (Domain&gt;Range)|Hospital-ver2:isEspeciallyTreats (Domain&gt;Range)|Hospital-ver2:IsInvolvedIn (Domain&gt;Range)|Hospital-ver2:roomHasBeds (Domain&gt;Range)|Hospital-ver2:wardHasRooms (Domain&gt;Range)|Hospital-ver2:wingHasDepartment (Domain&gt;Range)|Hospital-ver2:wingHasWard (Domain&gt;Range)|Hospital-ver2:worksIn (Domain&gt;Range)|isEspeciallyInvolvedIn|isEspeciallyInvolvedIn (Domain&gt;Range)|isEspeciallyInvolvedIn (Necessary and Sufficient)|isEspeciallyInvolvedIn (Necessary)|isEspeciallyTreats|isEspeciallyTreats (Domain&gt;Range)|isEspeciallyTreats (Necessary and Sufficient)|isEspeciallyTreats (Necessary)|IsInvolvedIn|IsInvolvedIn (Domain&gt;Range)|IsInvolvedIn (Necessary and Sufficient)|IsInvolvedIn (Necessary)</text></g></g><script><![CDATA[var svgSVGElement;var ZOOM_FACTOR_IN = 1.10;var ZOOM_FACTOR_OUT = 1.0/ZOOM_FACTOR_IN;var ZOOM_DIRECTION_IN = "in"var ZOOM_DIRECTION_OUT = "out"var ZOOM_KEY_IN = "Z"var ZOOM_KEY_OUT = "X"var ZOOM_TIMEOUT = 50; // millisecondsvar zoomFactor;var zoomDirection;var zooming = false;var mouseLocX = 0.0;var mouseLocY = 0.0;var ABSOLUTE_ARC_WIDTH = 2.0;var newScale = 1.0;var newTransX = 0.0;var newTransY = 0.0;function dumpProps(obj, parent) {   for (var i in obj) {      if (parent) { msg = parent + "." + i + "\n" + obj[i]; } else { var msg = i + "\n" + obj[i]; }      if (!confirm(msg)) { return; }      if (typeof obj[i] == "object") {          if (parent) { dumpProps(obj[i], parent + "." + i); } else { dumpProps(obj[i], i); }      }   }}function LoadHandler (evt) { 	if ( window.svgDocument == null ) {		svgDocument = evt.target.ownerDocument;	}	svgSVGElement = svgDocument.getDocumentElement();	new Title (svgDocument, 12); 	var currentScale = svgDocument.getElementById("currentScale");	var cscale = currentScale.getFirstChild().getNodeValue();	//alert("displaybean scale "+cscale);	var svgscale = svgSVGElement.getCurrentScale();	//alert("svg startup scale "+svgscale);	adjustArcWidths(cscale);// 	setTimeout('adjustArcWidths(cscale)', 10);	 }  function zoomHandler(evt) { 	Title_Zoom(evt);		var cscale = svgSVGElement.getCurrentScale();	//alert("zooming...true svg scale: "+ cscale);	adjustArcWidths(cscale);// 	setTimeout("adjustArcWidths(csale)", 100);	//setTimeout('adjustCommentBox()', 100); }  // update the thickness of the arcs so that they always appear the  // same thickness no matter what the current scale is  function adjustArcWidths (cs) {	//alert("pass in scale " + cs); 	// look for line elements	var lineElements = svgDocument.getElementsByTagName ("line");//	var cs = svgSVGElement.getCurrentScale();	if((cs<=1)){	   return;	}	if(cs>=2){	   cs = cs*2;		}	var newStrokeWidth = ABSOLUTE_ARC_WIDTH/cs;	for (var i = 0; i<lineElements.getLength(); i++) {		var lineElement = lineElements.item(i);		var strokeWidth = lineElement.getAttribute ("stroke-width");		// do not let stroke too thick 		if(newStrokeWidth>=0.4){		  newStrokeWidth = 0.1;		}		if(newStrokeWidth<=0.1){		  newStrokeWidth = 0.2;		}			   lineElement.setAttribute ("stroke-width", "" + newStrokeWidth);	}//   	alert("draw stroke width: " + newStrokeWidth); }   function adjustCommentBox () {	var commentTransElement = svgDocument.getElementById ("commentTranslate");	var commentScaleElement = svgDocument.getElementById ("commentScale");  	var currSVGScale = svgSVGElement.currentScale;	var newCommentScale = 1.0/currSVGScale;	var currSVGTransX = svgSVGElement.currentTranslate.x	var currSVGTransY = svgSVGElement.currentTranslate.y	var newCommentTransX =  - currSVGTransX;	var newCommentTransY =  - currSVGTransY;	commentScaleElement.setAttribute("transform", "scale(" + newCommentScale + ")");	commentTransElement.setAttribute("transform", "translate(" + newCommentTransX + "," + newCommentTransY + ")"); }  function keyupHandler (keyEvent) {	// Get the character-code of the key that was pressed.	var key = keyEvent.keyCode;	// Get string equivalent of input character-code.	var input_text = String.fromCharCode(key);	//window.status = input_text + "up";	if (zooming && zoomDirection == ZOOM_DIRECTION_IN && input_text == ZOOM_KEY_IN) {  		// zoom in  		zooming = false;	} else if (zooming && zoomDirection == ZOOM_DIRECTION_OUT && input_text == ZOOM_KEY_OUT) {		// zoom out  		zooming = false;	} else {		// do nothing	}}function keydownHandler (keyEvent) {	// Get the character-code of the key that was pressed.	var key = keyEvent.keyCode;	// Get string equivalent of input character-code.	var input_text = String.fromCharCode(key);	//window.status = input_text + "down";	if (input_text == ZOOM_KEY_IN) {  		// start zooming in  		zoomDirection = ZOOM_DIRECTION_IN;  		zoomFactor = ZOOM_FACTOR_IN;  		zooming = true;	} else if (input_text == ZOOM_KEY_OUT) {		// start zooming out		zoomDirection = ZOOM_DIRECTION_OUT  		zoomFactor = ZOOM_FACTOR_OUT;  		zooming = true;	} else {		zooming = false;	}	// keep zooming until a keyup event is thrown	//if (zooming) {		//setTimeout('zoomOneStep()', ZOOM_TIMEOUT);	//}	zoomOneStep();}function mousemoveHandler (evt) {		mouseLocX = evt.getClientX();	mouseLocY = evt.getClientY();	var currScale = svgSVGElement.currentScale;	var currTransX = svgSVGElement.currentTranslate.x;	var currTransY = svgSVGElement.currentTranslate.y;	var absoluteX = (mouseLocX - currTransX) / currScale;	var absoluteY = (mouseLocY - currTransY) / currScale;	var scaleAndTransform = "scale: " +  svgSVGElement.currentScale + "  translate: " + svgSVGElement.currentTranslate.x + "," + svgSVGElement.currentTranslate.y;	var mouseLocationTransformed = "mouseLocation (transformed): " + mouseLocX + "," + mouseLocY;	var mouseLocationAbsolute = "mouseLocation (absolute): " + absoluteX + "," + absoluteY;	//window.status = scaleAndTransform + "  -  " + mouseLocationTransformed + "  -  " + mouseLocationAbsolute;	Title.Activate(evt);}function zoomOneStep () {  	var oldScale = svgSVGElement.currentScale;  	var oldTransX = svgSVGElement.currentTranslate.x  	var oldTransY = svgSVGElement.currentTranslate.y  	newScale = oldScale; 	newTransX = oldTransX; 	newTransY = oldTransY; 	var oldAbsoluteX = (mouseLocX - oldTransX) / oldScale;	var oldAbsoluteY = (mouseLocY - oldTransY) / oldScale;  	newScale = oldScale * zoomFactor;	// we want the absolute point under the mouse to stay in the same place	//ie. the absolute position of the mouse should be the same when done	newTransX = mouseLocX - newScale * oldAbsoluteX;	newTransY = mouseLocY - newScale * oldAbsoluteY;		// set the new scale and translation  	svgSVGElement.currentScale = newScale;	svgSVGElement.currentTranslate.x = newTransX;  	svgSVGElement.currentTranslate.y = newTransY;}// == Title.js -- Copyright (C) Stefan Goessner ========================function Title(doc, sz) {   this.element = null;  // element to show title of ..   Title.size = sz;      // text size ..   Title.oldScale = document.getDocumentElement().getCurrentScale();     // scaling modified by zooming ..   this.Create(doc);   AddTitleEvents(doc.getDocumentElement());   window.svgTitle = this;}Title.prototype.Create = function(doc){   this.rec = doc.createElement("rect");   this.rec.setAttribute("y", -0.9*Title.size);   this.rec.setAttribute("x", -0.25*Title.size);   this.rec.setAttribute("width", "1");   this.rec.setAttribute("height", 1.25*Title.size);   this.rec.setAttribute("style", "stroke:black;fill:#edefc2;stroke-width:1");   this.str = doc.createTextNode("");   this.txt = doc.createElement("text")   this.txt.setAttribute("style", "font-family:Arial; font-size:" + Title.size + ";fill:black;");   this.txt.appendChild(this.str);   this.grp = doc.createElement("g"),   this.grp.setAttribute("transform", "translate(0,0)");   this.grp.setAttribute("visibility", "hidden");   this.grp.appendChild(this.rec);   this.grp.appendChild(this.txt);   doc.getDocumentElement().appendChild(this.grp);}Title.Activate = function Title_Activate(evt) {	mouseLocX = evt.getClientX();	mouseLocY = evt.getClientY();		var currScale = svgSVGElement.currentScale;	var currTransX = svgSVGElement.currentTranslate.x;	var currTransY = svgSVGElement.currentTranslate.y;	var absoluteX = (mouseLocX - currTransX) / currScale;	var absoluteY = (mouseLocY - currTransY) / currScale;		var scaleAndTransform = "scale: " +  svgSVGElement.currentScale + "  translate: " + svgSVGElement.currentTranslate.x + "," + svgSVGElement.currentTranslate.y;	var mouseLocationTransformed = "mouseLocation (transformed): " + mouseLocX + "," + mouseLocY;	var mouseLocationAbsolute = "mouseLocation (absolute): " + absoluteX + "," + absoluteY;	var x = (evt.getClientX() - document.getDocumentElement().getCurrentTranslate().getX())/document.getDocumentElement().getCurrentScale() +  0.25*Title.size;	    var y = (evt.getClientY() - document.getDocumentElement().getCurrentTranslate().getY())/document.getDocumentElement().getCurrentScale() - Title.size;	window.svgTitle.element = evt.getCurrentTarget();	window.svgTitle.str.setNodeValue(TextOf(TitleElementOf(window.svgTitle.element)));	window.svgTitle.rec.setAttribute("width", window.svgTitle.txt.getComputedTextLength() + 0.5*Title.size);	window.svgTitle.grp.setAttribute("transform", "translate(" + x + "," + y + ")");	window.svgTitle.grp.setAttribute("visibility", "visible");}Title.Zoom = function Title_Zoom(evt) {   var newscl = evt.getTarget().getOwnerDocument().getDocumentElement().getCurrentScale();   Title.size *= Title.oldScale/newscl;   //alert ("Title.size: " + Title.size);   Title.oldScale = newscl;   window.svgTitle.rec.setAttribute("y", -0.9*Title.size);   window.svgTitle.rec.setAttribute("x", -0.25*Title.size);   window.svgTitle.rec.setAttribute("height", 1.25*Title.size);   window.svgTitle.rec.setAttribute("style", "stroke:black;fill:#edefc2;stroke-width:" + 1/document.getDocumentElement().getCurrentScale());   window.svgTitle.txt.setAttribute("style", "font-family:Arial; font-size:" + Title.size + ";fill:black;");}Title.Register = function Title_Register(elem) {   if (TitleElementOf(elem) != null)      elem.addEventListener("mousemove", Title.Activate, false);}// --- local helper functions ------------------------function TitleElementOf(elem) {   var childs = elem.getChildNodes();   for (var i=0; i<childs.getLength(); i++)      if (childs.item(i).getNodeType() == 1 && childs.item(i).getNodeName() == "title") // title element ..         return childs.item(i);      return null;}function TextOf(elem) {   var childs = elem ? elem.getChildNodes() : null;   for (var i=0; childs && i<childs.getLength(); i++)      if (childs.item(i).getNodeType() == 3) // text node ..         return childs.item(i).getNodeValue();      return "";}function AddTitleEvents(elem) {   var childs = elem.getChildNodes();   for (var i=0; i<childs.getLength(); i++)      if (childs.item(i).getNodeType() == 1) // element node ..         AddTitleEvents(childs.item(i));   if (TitleElementOf(elem) != null)      elem.addEventListener("mousemove", Title.Activate, false);}// === end ======================================================]]></script></svg>